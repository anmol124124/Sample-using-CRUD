version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: exam_pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: exam_mgmt
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d exam_mgmt"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: exam_redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: exam_backend
    environment:
      NODE_ENV: production
      PORT: 4000
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: exam_mgmt
      PGUSER: postgres
      PGPASSWORD: postgres
      JWT_SECRET: replace_with_strong_secret
      JWT_EXPIRES_IN: 1d
      REDIS_URL: redis://redis:6379
      UPLOAD_DIR: /app/uploads
      MAX_UPLOAD_BYTES: 52428800
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:4000
    container_name: exam_frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  pgdata:
  redisdata:
  backend_uploads: